openapi: 3.0.0
info:
  title: Letterboxd API
  version: 1.0.0
  description: Welcome to the non-official Letterboxd API documentation. This API allows you to register, login, and interact with your friends and movies.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /:
    get:
      summary: Swagger
      responses:
        '200':
          description: Swagger

  /u/:
    get:
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            example: 0
      tags:
        - user
      summary: Retrieves a list of users
      responses:
        '200':
          description: A list of users
        '500':
          description: Error retrieving users
    put:
      tags:
        - user
      summary: Updates the current authenticated user's details
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: User successfully updated
        '400':
          description: Missing required fields
        '401':
          description: Invalid credentials
        '500':
          description: Error updating user

  /u/register:
    post:
      tags:
        - user
      summary: Registers a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      username:
                        type: string
                        example: johndoe
                      role:
                        type: string
                        example: user
                      createdAt:
                        type: string
                        format: date-time
                        example: '2023-10-01T12:00:00Z'
                description: User successfully registered
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Username or password missing, or user already exists"
          description: Username or password missing, or user already exists
        '405':
          description: Method Not Allowed
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error registering user"
          description: Error registering user

  /u/login:
    post:
      tags:
        - user
      summary: Authenticates a user and returns a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: User successfully authenticated, returns user details and JWT token
        '400':
          description: Username or password missing
        '401':
          description: Invalid credentials
        '500':
          description: Error logging in

  /u/me:
    get:
      tags:
        - user
      summary: Retrieves the current authenticated user's details
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns the authenticated user's details
        '401':
          description: Not authenticated or invalid/expired token
        '404':
          description: User not found

  /movies:
    get:
      tags:
        - movie
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            example: 0
      summary: Retrieves a list of movies
      responses:
        '200':
          description: A list of movies
        '500':
          description: Error retrieving movies
   
  /movies/review:
    post:
      tags:
        - movie
      security:
        - bearerAuth: []
      summary: Add a review to a movie
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: Bearer <token>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                movieId:
                  type: string
                rating:
                  type: integer
                review:
                  type: string
              required:
                - movieId
                - rating
                - review
      responses:
        '201':
          description: Review successfully added
        '400':
          description: Missing required fields
        '500':
          description: Error adding review
  
  /movies/unreview:
    post:
      tags:
        - movie
      security:
        - bearerAuth: []
      summary: Remove a review from a movie
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: Bearer <token>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                movieId:
                  type: string
              required:
                - movieId
      responses:
        '200':
          description: Review successfully removed
        '404':
          description: Review not found
        '500':
          description: Error removing review        

  /movies/{movieId}:
    get:
      tags:
        - movie
      summary: Retrieves details of a specific movie
      parameters:
        - name: movieId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Movie details
        '404':
          description: Movie not found
        '500':
          description: Error retrieving movie details

  /friends/following:
    get:
      tags:
        - friend
      security:
        - bearerAuth: []
      summary: Retrieves a list of your following users
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  following:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        userId:
                          type: integer
                          description: User ID of the friend
                        friendId:
                          type: integer
                          description: Friend ID of the friend
                        createdAt:
                          type: string
                          format: date-time
                          description: Timestamp when the friendship was created
          description: Retrieves a list of who you follows
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error retrieving friends"
          description: Error retrieving friends

  /friends/followers:
    get:
      tags:
        - friend
      security:
        - bearerAuth: []
      summary: Retrieves a list of your followers
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  followers:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        userId:
                          type: integer
                          description: User ID of the friend
                        friendId:
                          type: integer
                          description: Friend ID of the friend
                        createdAt:
                          type: string
                          format: date-time
                          description: Timestamp when the friendship was created
          description: Retrieves a list of your followers
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error retrieving friends"
          description: Error retrieving friends

  /friends/follow:
    post:
      tags:
        - friend
      security:
        - bearerAuth: []
      summary: Adds a new friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                friendId:
                  type: string
              required:
                - friendId
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Friend successfully added"
          description: Friend successfully added
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Missing required fields"
          description: Missing required fields
        '409':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Already following the user"
          description: Already following the user
        '500':
          description: Error adding friend

  /friends/unfollow:
    post:
      tags:
        - friend
      security:
        - bearerAuth: []
      summary: Removes a friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                friendId:
                  type: string
              required:
                - friendId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "successfully unfollowed Friend"
          description: Friend successfully removed
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "You are not friend with this user"
          description: Friend not found
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error removing friend"
          description: Error removing friend  